@using SmarTreaty.Common.ViewModels.Templates
@model SmarTreaty.Common.ViewModels.Templates.CreateTemplateViewModel

@{
    ViewBag.Title = "Template Create";
}

<h1>Template Code</h1>


@using (Html.BeginForm("Create", "Templates", FormMethod.Post))
{
    @Html.HiddenFor(model => model.Verified, new { Value = Model.Verified })
    @Html.HiddenFor(model => model.Abi, new { Value = Model.Abi })
    @Html.HiddenFor(model => model.ByteCode, new { Value = Model.ByteCode })

<div class="templates_editor_container">
    @Html.TextAreaFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })

    <div class="templates_editor_right_container">
        <div style="margin-bottom: 15px;">
            <h3>Name</h3>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @if (!Model.Verified)
        {
            <button class="btn btn-success">Verify</button>
        }
        else
        {
            <button class="btn btn-secondary" style="margin-top: 50px;">Send</button>
        }
        @if (Model.ErrorMessage != null)
        {
            @Html.LabelFor(model => model.ErrorMessage, new { @class = "font-weight-bold col-md-2", @style = "color: red" })
        }
    </div>
</div>
}