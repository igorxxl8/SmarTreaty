@using SmarTreaty.Common.ViewModels.Templates
@model SmarTreaty.Common.ViewModels.Templates.CreateTemplateViewModel

@{
    ViewBag.Title = "Template Create";
}

<h1>Contract Template</h1>

@using (Html.BeginForm("Create", "Templates", FormMethod.Post))
{
    @Html.HiddenFor(model => model.Verified, new { Value = Model.Verified })
    @Html.HiddenFor(model => model.Abi, new { Value = Model.Abi })
    @Html.HiddenFor(model => model.ByteCode, new { Value = Model.ByteCode })

<div class="templates_editor_container">
    <div style="width: 50%">
        <h3>Name</h3>
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 30px" } })
        <h3>Source Code</h3>
        @Html.TextAreaFor(model => model.Source, new { @class = "form-control", @style = "width: 100%; height: 300px" })
    </div>
    

    <div class="templates_editor_right_container">
        <div style="margin-bottom: 15px;">
            <h3>Description</h3>
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @style = "width: 100%; height: 355px" })

        </div>

        @if (!Model.Verified)
        {
            <button class="btn btn-success">Verify</button>
        }
        else
        {
            <button class="btn btn-secondary">Send</button>
        }
        @if (Model.ErrorMessage != null)
        {
            @Html.LabelFor(model => model.ErrorMessage, new { @class = "font-weight-bold col-md-2", @style = "color: red" })
        }
    </div>
</div>
}