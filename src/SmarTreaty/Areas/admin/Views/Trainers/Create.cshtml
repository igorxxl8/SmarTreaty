@model SmarTreaty.ViewModels.Trainers.CreateTrainerViewModel

@{
    ViewBag.Title = "Add trainer";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <label class="col-form-label pl-3 font-weight-bold" for="Id">User</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id, ViewBag.UsersList as SelectList, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Id, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, new {@class = "col-md-2 font-weight-bold"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Info, new {htmlAttributes = new {@class = "form-control", autocomplete = "off"}})
                @Html.ValidationMessageFor(model => model.Info, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainerGroupId, new {@class = "col-md-2 font-weight-bold"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TrainerGroupId, ViewBag.TrainerGroupsList as SelectList, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.TrainerGroupId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
                @if (((SelectList)ViewBag.UsersList).Any())
                {
                    <input type="submit" value="Create" class="btn btn-success"/>
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-success" disabled="disabled"/>
                }

            </div>
        </div>
    </div>
}