@model SmarTreaty.ViewModels.Courses.UpdateTrainersForCourseViewModel

@{
    ViewBag.Title = "Update trainers for " + Model.Name;
}

<div class="px-3">
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)

    <table class="table table-bordered table-hover" style="max-width: 960px">
        <thead>
        <tr>
            <th>Trainer</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody id="trainersTableBody">

        @foreach (var trainer in Model.Trainers)
        {
            <tr id="@trainer.Id" class="trainerRow">
                <td>
                    @trainer.User.FirstName @trainer.User.LastName
                </td>
                <td style="width: 150px">
                    <button class="btn btn-danger remove-button">Remove</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div id="result"></div>

    <div class="d-flex">
        @Html.DropDownList("TrainersBox", ViewBag.Trainers as SelectList, new {@class = "form-control mr-1"})
        <input id="add" type="button" value="Add" class="btn btn-warning"/>
    </div>
    <div class="my-3">
        @Html.ActionLink("Back", "Index", null, new {@class = "btn btn-primary"})
    </div>
</div>

@section scripts{
    <script type="text/javascript" language="javascript">
        $(document).ready(() => {

            function removeButtonHandler(e) {
                var row = e.target.closest(".trainerRow");
                var id = row.id;
                var text = row.cells[0].innerHTML;

                $.ajax(
                    {
                        async: true,
                        url: "/api/courses/@Model.Id/trainers/true",
                        method: "PUT",
                        crossDomain: true,
                        processData: false,
                        headers: {
                            "content-type": "application/json",
                            "cache-control": "no-cache"
                        },
                        data: JSON.stringify({ "Id": id }),
                        success: () => {
                            row.remove();
                            $("select#TrainersBox").append(new Option(text, id));
                        }
                    });
            };

            $(".remove-button").on("click", removeButtonHandler);

            $("#add").click(() => {
                var id = $("select#TrainersBox").val();
                if (id == null) {
                    return;
                }

                $.ajax(
                    {
                        async: true,
                        url: "/api/courses/@Model.Id/trainers/false",
                        method: "PUT",
                        crossDomain: true,
                        processData: false,
                        headers: {
                            "content-type": "application/json",
                            "cache-control": "no-cache"
                        },
                        data: JSON.stringify({ "Id": id }),
                        success: () => {
                            $("tbody#trainersTableBody").append(`
                            <tr id="${id}" class="trainerRow">
                                <td >
                                ${$(`option[value=${id}]`).text()}
                                </td>
                                <td style="width:150px">
                                    <button class="btn btn-danger remove-button">Remove</button>
                                </td>
                            </tr>`);
                            $(`option[value=${id}]`).remove();
                            $(".remove-button").unbind();
                            $(".remove-button").on("click", removeButtonHandler);
                        }
                    });
            });
        });
    </script>
}